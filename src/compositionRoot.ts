import 'reflect-metadata';
import {BlogsRepository} from "./repositories/blogs/blogsRepository";
import {BlogsQueryRepository} from "./repositories/blogs/queryBlogRepository";
import {CommentsRepository} from "./repositories/comments/commentsRepository";
import {PostsRepository} from "./repositories/posts/postsRepository";
import {PostsQueryRepository} from "./repositories/posts/queryPostRepository";
import {SecurityRepository} from "./repositories/security/securityRepository";
import {UsersActionsRepository} from "./repositories/userActions/usersActionsRepository";
import {UsersRepository} from "./repositories/users/usersRepository";
import {UsersQueryRepository} from "./repositories/users/queryUsersRepository";
import {AuthService} from "./application/authService";
import {UsersService} from "./application/usersService";
import {SecurityService} from "./application/securityService";
import {BlogsService} from "./application/blogsService";
import {PostsService} from "./application/postsService";
import {CommentsService} from "./application/commentsService";
import {UserActionsService} from "./application/userActionsService";
import {AuthController} from "./routes/controllers/authController";
import {BlogsController} from "./routes/controllers/blogsController";
import {CommentsController} from "./routes/controllers/commentsController";
import {DeleteAllController} from "./routes/controllers/deleteAllController";
import {PostsController} from "./routes/controllers/postsController";
import {SecurityController} from "./routes/controllers/securityController";
import {UsersController} from "./routes/controllers/usersController";
import {LikesRepository} from "./repositories/likes/likesRepository";
import {LikeService} from "./application/likeService";
import {CommentsWithLikesQueryRepository} from "./repositories/comments/queryCommentsWithLikesRepository";
import {Container} from "inversify";
import {JWTService} from "./application/JWTService";

export const container = new Container();
container.bind<BlogsRepository>(BlogsRepository).to(BlogsRepository);
container.bind<BlogsQueryRepository>(BlogsQueryRepository).to(BlogsQueryRepository);
container.bind<CommentsRepository>(CommentsRepository).to(CommentsRepository);
container.bind<PostsRepository>(PostsRepository).to(PostsRepository);
container.bind<PostsQueryRepository>(PostsQueryRepository).to(PostsQueryRepository);
container.bind<UsersRepository>(UsersRepository).to(UsersRepository);
container.bind<UsersQueryRepository>(UsersQueryRepository).to(UsersQueryRepository);
container.bind<SecurityRepository>(SecurityRepository).to(SecurityRepository);
container.bind<UsersActionsRepository>(UsersActionsRepository).to(UsersActionsRepository);
container.bind<LikesRepository>(LikesRepository).to(LikesRepository);
container.bind<CommentsWithLikesQueryRepository>(CommentsWithLikesQueryRepository).to(CommentsWithLikesQueryRepository);

container.bind<BlogsService>(BlogsService).to(BlogsService);
container.bind<PostsService>(PostsService).to(PostsService);
container.bind<LikeService>(LikeService).to(LikeService);
container.bind<CommentsService>(CommentsService).to(CommentsService);
container.bind<UsersService>(UsersService).to(UsersService);
container.bind<SecurityService>(SecurityService).to(SecurityService);
container.bind<UserActionsService>(UserActionsService).to(UserActionsService);
container.bind<AuthService>(AuthService).to(AuthService);
container.bind<JWTService>(JWTService).to(JWTService);

container.bind<AuthController>(AuthController).to(AuthController);
container.bind<SecurityController>(SecurityController).to(SecurityController);
container.bind<BlogsController>(BlogsController).to(BlogsController);
container.bind<CommentsController>(CommentsController).to(CommentsController);
container.bind<PostsController>(PostsController).to(PostsController);
container.bind<UsersController>(UsersController).to(UsersController);
container.bind<DeleteAllController>(DeleteAllController).to(DeleteAllController);